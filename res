assume
assume
push
mov
sub
push
call
mov
mov
cmp
jnz
inc
mov
test
jz
cmp
jnz
cmp
jnz
inc
jmp
cmp
jle
inc
cmp
jg
cmp
jz
cmp
jg
inc
cmp
jnz
mov
lea
push
call
test
mov
jz
movzx
push
push
push
push
call
push
call
db
db
db
db
db
push
push
push
push
push
push
call
push
call
xor
retn
align
dd
extrn
extrn
extrn
extrn
extrn
assume
assume
dd
public
mov
sub
mov
mov
mov
repne
mov
or
jz
cmp
jnb
nop
nop
nop
nop
repe
or
jz
nop
nop
nop
nop
sub
cmp
jb
sub
mov
mov
cmp
jnz
nop
nop
nop
nop
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
sub
mov
sub
rep
mov
jmp
jmp
dw
retn
align
dw
dd
dd
dd
dd
dd
dd
dd
push
mov
sub
push
push
push
mov
cmp
jz
cmp
jnz
mov
pusha
lea
mov
cmp
jz
nop
nop
nop
nop
add
mov
inc
mov
inc
sub
mov
mov
push
mov
push
mov
mov
add
push
mov
push
VxDCall
add
add
mov
cmp
jnz
mov
sub
lea
mov
mov
VxDCall
jb
mov
mov
mov
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
cmp
jnz
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
add
mov
mov
add
lea
mov
VxDCall
mov
mov
add
lea
mov
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
mul
mov
add
sub
add
add
mov
mov
lea
VxDCall
cmp
jz
mov
mov
add
mov
add
sub
mov
sub
mov
mov
div
inc
mul
push
add
mov
sub
mov
mov
div
inc
mul
push
add
mov
mov
add
mov
mov
mov
mov
add
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lodsd
add
mov
mov
loop
pop
mov
mov
add
sub
pop
lea
call
mov
mov
add
mov
lea
VxDCall
mov
VxDCall
popa
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
call
add
pop
pop
pop
leave
retn
db
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
db
dd
dd
dd
dd
dd
dd
dd
end
assume
assume
public
push
pushf
pusha
call
mov
sub
add
xor
call
mov
jmp
push
mov
push
sidt
pop
lea
xchg
ror
xchg
int
mov
rol
mov
xor
pop
pop
popa
popf
retn
retn
db
db
db
db
db
db
align
dw
db
db
db
db
db
db
db
db
db
db
db
db
db
align
dw
db
db
db
db
db
db
db
align
db
db
db
db
db
align
dw
db
db
db
db
db
align
dw
db
db
db
db
db
db
db
db
db
align
dw
db
align
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
align
dw
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
align
dw
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
align
dw
db
db
db
db
db
align
dw
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
align
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
align
dw
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
align
dw
db
db
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
db
xor
div
or
jz
inc
mul
retn
call
pop
sub
retn
dd
dd
dd
dd
end
assume
assume
dd
db
dd
dd
db
jmp
jmp
align
dd
db
dd
db
align
dd
assume
dd
align
extrn
extrn
extrn
extrn
assume
assume
dd
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
public
sub
mov
mov
cmp
jb
mov
cmp
jz
mov
lea
lodsd
mov
mov
mov
loop
push
sidt
pop
add
mov
mov
lea
mov
ror
mov
mov
push
int
pop
pop
mov
ror
mov
mov
jmp
db
dd
dd
dd
dd
dd
dd
dd
adc
push
mov
sub
push
push
push
push
push
push
push
mov
cmp
jz
cmp
jnz
mov
pusha
lea
mov
cmp
jz
add
mov
inc
mov
inc
mov
push
push
mov
mov
add
push
push
call
jmp
inc
add
add
add
mov
cmp
jz
cmp
jnz
xor
lea
mov
mov
mov
call
jb
xchg
lea
xor
mov
mov
call
cmp
jnz
cmp
jnz
mov
cmp
ja
cmp
jz
mov
cmp
jnz
test
jnz
add
mov
add
movzx
add
movzx
dec
mov
push
mul
pop
add
mov
xadd
push
add
push
mov
xor
div
xor
inc
mul
mov
mov
pop
pop
push
add
xchg
add
mov
add
or
pop
mov
add
push
lea
xor
mov
mov
call
pop
mov
mov
mov
call
mov
call
popa
mov
pop
mov
call
add
leave
retn
call
jmp
dw
db
retn
db
dd
end
assume
assume
public
call
push
call
jmp
align
dd
assume
pusha
call
pop
sub
call
mov
jmp
push
mov
call
call
retf
pop
push
sgdt
pop
sldt
and
jz
add
mov
mov
mov
shrd
fild
mov
cld
stosw
mov
stosd
shld
stosw
call
fistp
pop
pop
popa
push
retn
pusha
mov
cmp
jz
push
xor
push
push
push
push
push
push
push
VMMCall
add
or
jz
mov
mov
cld
mov
mov
mov
rep
cmp
jz
mov
mov
mov
add
add
add
rep
jmp
mov
lea
mov
rep
lea
mov
mov
mov
push
add
push
VxDCall
add
pop
mov
mov
mov
popa
retn
db
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
align
extrn
end
assume
assume
public
mov
jmp
push
call
jmp
align
dd
db
assume
db
mov
mov
mov
mov
repne
mov
or
jz
cmp
jnb
repe
or
jz
sub
cmp
jb
sub
mov
mov
cmp
jnz
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
sub
mov
sub
rep
mov
jmp
jmp
db
db
db
dd
db
dw
dd
dd
db
db
dd
db
db
db
dd
db
dd
db
dd
db
dd
db
dd
db
db
db
dd
db
db
dd
dw
dd
db
db
dd
dd
dd
db
dd
db
db
dd
db
db
db
dd
db
dw
db
push
mov
sub
push
push
push
mov
cmp
jz
cmp
jnz
mov
pusha
lea
mov
cmp
jz
add
mov
inc
mov
inc
xor
mov
mov
push
mov
push
mov
mov
add
push
mov
push
VxDCall
add
add
mov
cmp
jnz
mov
xor
lea
mov
mov
VxDCall
jb
mov
mov
mov
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
cmp
jnz
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
add
mov
mov
add
lea
mov
VxDCall
mov
mov
add
lea
mov
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
mul
mov
add
sub
add
add
mov
mov
lea
VxDCall
cmp
jz
mov
mov
add
mov
add
sub
mov
xor
mov
mov
div
inc
mul
push
add
mov
xor
mov
mov
div
inc
mul
push
add
mov
mov
add
mov
mov
mov
mov
add
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lodsd
add
mov
mov
loop
pop
mov
mov
add
sub
pop
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
VxDCall
popa
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
call
add
pop
pop
pop
leave
retn
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
db
db
dd
db
align
dd
db
align
extrn
end
assume
assume
public
mov
jmp
push
call
jmp
align
dd
db
assume
db
mov
sub
mov
mov
mov
repne
mov
or
jz
cmp
jnb
nop
nop
nop
nop
repe
or
jz
nop
nop
nop
nop
sub
cmp
jb
sub
mov
mov
cmp
jnz
nop
nop
nop
nop
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
sub
mov
sub
rep
mov
jmp
jmp
db
dw
dd
db
db
dd
db
dd
db
db
dd
dw
dw
dd
dd
dd
dd
db
db
db
db
db
dd
db
dw
db
push
mov
sub
push
push
push
mov
cmp
jz
cmp
jnz
mov
pusha
lea
mov
cmp
jz
nop
nop
nop
nop
add
mov
inc
mov
inc
sub
mov
mov
push
mov
push
mov
mov
add
push
mov
push
VxDCall
add
add
mov
cmp
jnz
mov
sub
lea
mov
mov
VxDCall
jb
mov
mov
mov
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
cmp
jnz
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
add
mov
mov
add
lea
mov
VxDCall
mov
mov
add
lea
mov
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
mul
mov
add
sub
add
add
mov
mov
lea
VxDCall
cmp
jz
mov
mov
add
mov
add
sub
mov
sub
mov
mov
div
inc
mul
push
add
mov
sub
mov
mov
div
inc
mul
push
add
mov
mov
add
mov
mov
mov
mov
add
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lodsd
add
mov
mov
loop
pop
mov
mov
add
sub
pop
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
VxDCall
popa
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
call
add
pop
pop
pop
leave
retn
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
db
db
align
align
dd
db
align
extrn
end
assume
assume
push
mov
sub
push
push
push
mov
push
mov
push
call
add
test
jz
push
call
add
mov
push
push
call
add
test
jz
push
call
add
mov
push
push
call
add
mov
test
jz
mov
sub
repne
not
sub
mov
shr
mov
mov
rep
mov
and
rep
mov
push
mov
mov
mov
mov
push
call
push
mov
push
call
mov
mov
mov
mov
lea
push
call
test
jz
push
push
push
push
push
call
mov
test
jz
push
push
push
push
call
push
lea
push
mov
push
push
call
test
jz
mov
mov
lea
push
push
call
test
jnz
lea
push
call
lea
push
call
push
lea
push
push
push
call
test
jnz
jmp
mov
push
call
jmp
mov
push
call
jmp
mov
push
call
xor
pop
pop
pop
mov
pop
retn
push
mov
sub
push
push
push
mov
push
push
call
mov
lea
push
push
call
mov
mov
lea
mov
cdq
sub
mov
sar
mov
lea
cdq
sub
sar
mov
lea
push
push
call
push
mov
push
add
push
push
mov
add
push
push
push
push
call
push
call
push
mov
push
add
push
push
mov
add
push
push
push
push
call
push
call
push
push
call
mov
mov
sub
lea
add
push
cdq
sub
push
sar
add
call
push
mov
push
sub
push
add
add
push
push
push
push
call
push
lea
push
push
call
lea
push
push
push
call
push
push
call
mov
push
push
mov
push
add
push
push
push
push
call
push
lea
push
push
call
lea
push
push
push
call
pop
pop
pop
mov
pop
retn
push
mov
mov
cmp
push
ja
jz
cmp
jz
jmp
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
push
push
push
push
call
jmp
mov
test
jz
push
call
mov
test
jz
push
call
call
push
call
jmp
mov
push
push
jmp
push
call
jmp
push
push
push
push
call
jmp
movzx
cmp
jnz
mov
push
push
jmp
push
mov
push
push
call
test
jz
push
call
push
call
jmp
push
mov
mov
push
push
push
call
test
jnz
push
push
call
call
push
mov
push
push
call
test
jz
mov
push
call
call
push
call
jmp
push
push
call
push
push
push
push
call
push
mov
call
push
call
jmp
cmp
jnz
push
mov
mov
push
push
call
push
test
jz
call
push
call
jmp
call
push
push
call
xor
pop
pop
retn
push
mov
push
mov
push
push
push
push
push
call
push
mov
push
push
push
push
push
call
push
mov
push
mov
push
push
push
push
call
push
mov
push
mov
push
push
push
push
call
push
mov
mov
mov
push
call
push
mov
push
call
pop
mov
retn
push
push
mov
mov
mov
test
jz
push
call
add
cmp
jb
mov
mov
mov
test
jz
push
call
add
cmp
jb
pop
pop
retn
push
mov
push
test
jz
push
call
push
mov
push
push
push
push
push
call
mov
test
jz
mov
push
push
mov
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
pop
pop
retn
push
mov
sub
push
lea
push
push
push
call
mov
test
jnz
lea
mov
push
push
push
call
cmp
sbb
mov
neg
or
jz
push
lea
push
push
call
push
lea
push
push
call
mov
pop
pop
pop
mov
pop
retn
push
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
test
jz
push
push
push
lea
push
call
add
jmp
push
lea
push
call
lea
push
push
call
mov
pop
retn
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
mov
mov
push
call
cmp
jz
mov
jmp
cmp
jz
push
lea
push
lea
push
mov
push
push
push
push
push
call
test
jz
mov
mov
mov
mov
mov
sub
cmp
sbb
inc
mov
mov
sub
mov
cmp
sbb
inc
mov
mov
mov
mov
mov
mov
cmp
sbb
neg
pop
mov
pop
retn
xor
mov
cmp
jz
mov
cmp
jz
inc
cmp
jz
push
mov
push
push
push
call
retn
sub
push
push
push
push
push
mov
push
call
mov
lea
push
push
call
push
call
mov
push
push
push
push
call
push
push
call
lea
mov
mov
push
push
call
push
push
push
call
push
push
call
push
push
call
cmp
jnz
mov
sub
mov
mov
mov
mov
mov
lea
mov
push
push
call
push
push
push
push
push
push
push
call
push
mov
push
call
push
push
call
pop
pop
pop
pop
add
retn
push
xor
mov
push
push
push
xor
mov
cmp
jz
mov
cmp
jz
mov
mov
cmp
jnz
test
jz
cmp
mov
jz
push
push
push
push
push
call
cmp
jnz
test
jz
cmp
mov
jz
push
push
push
push
push
call
cmp
jnz
test
jz
push
push
call
add
mov
push
push
push
call
push
mov
call
jmp
mov
cmp
jnz
test
jz
push
push
call
add
mov
push
push
push
call
push
call
pop
pop
pop
pop
retn
push
push
push
push
xor
cmp
jz
mov
mov
mov
cmp
jz
mov
mov
mov
call
mov
mov
jmp
mov
cmp
jb
mov
mov
test
jz
call
sub
mov
sub
mov
div
sub
div
mov
cmp
jnz
cmp
jnz
mov
mov
sub
mov
div
mov
mov
sub
mov
div
mov
xor
push
push
call
add
mov
test
jnz
test
jz
test
jz
test
jz
mov
cmp
jbe
cmp
sbb
and
add
jmp
cmp
sbb
and
add
jmp
mov
cmp
mov
jmp
mov
cmp
mov
adc
push
push
push
call
add
mov
push
push
push
call
add
mov
test
jz
push
mov
call
jmp
mov
test
jz
push
call
push
push
push
call
cmp
jz
mov
push
call
mov
pop
inc
pop
pop
pop
retn
push
lea
mov
sub
push
lea
push
mov
push
mov
push
call
lea
lea
push
lea
push
push
push
push
push
push
call
mov
mov
pop
retn
cmp
jz
push
push
call
mov
push
mov
push
push
push
call
retn
cmp
jnz
mov
mov
mov
jmp
mov
mov
push
push
push
push
call
retn
align
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
lea
push
call
add
push
push
call
add
mov
mov
mov
mov
cmp
jle
inc
mov
cmp
jg
cmp
jz
cmp
jg
inc
mov
cmp
jnz
push
push
push
push
call
push
call
mov
push
call
jmp
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
retn
mov
mov
mov
cmp
jz
cmp
jz
cmp
jz
cmp
jnz
push
call
add
mov
mov
push
call
add
push
call
add
push
call
add
mov
push
call
add
mov
mov
mov
pop
pop
pop
mov
pop
retn
align
mov
retn
align
align
align
jmp
align
assume
db
align
dd
db
align
dd
db
dw
db
db
db
db
db
db
db
db
align
dd
dd
align
align
align
align
dd
align
dd
dd
align
align
dd
db
dd
db
dd
db
dd
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
assume
assume
assume
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
retn
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
align
dd
public
mov
sub
mov
mov
mov
repne
mov
or
jz
cmp
jnb
nop
nop
nop
nop
repe
or
jz
nop
nop
nop
nop
sub
cmp
jb
sub
mov
mov
cmp
jnz
nop
nop
nop
nop
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
sub
mov
sub
rep
mov
jmp
jmp
dw
dd
dd
dd
dd
dd
push
mov
sub
push
push
push
mov
cmp
jz
cmp
jnz
mov
pusha
lea
mov
cmp
jz
nop
nop
nop
nop
add
mov
inc
mov
inc
sub
mov
mov
push
mov
push
mov
mov
add
push
mov
push
VxDCall
add
add
mov
cmp
jnz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
mov
sub
lea
mov
mov
VxDCall
jb
mov
mov
mov
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
cmp
jnz
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
add
mov
mov
add
lea
mov
VxDCall
mov
mov
add
lea
mov
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
mul
mov
add
sub
add
add
mov
mov
lea
VxDCall
cmp
jz
mov
mov
add
mov
add
sub
mov
sub
mov
mov
div
inc
mul
push
add
mov
sub
mov
mov
div
inc
mul
push
add
mov
mov
add
mov
mov
mov
mov
add
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
mov
mov
mov
mov
mov
lea
mov
lodsd
add
mov
mov
loop
pop
mov
mov
add
sub
pop
lea
call
mov
mov
add
mov
lea
VxDCall
mov
VxDCall
popa
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
call
add
pop
pop
pop
leave
retn
db
dd
dd
dd
dd
dd
dd
dd
dd
dd
end
assume
assume
public
mov
jmp
push
call
jmp
align
dd
db
assume
db
mov
sub
mov
mov
mov
repne
mov
or
jz
cmp
jnb
nop
nop
nop
nop
repe
or
jz
nop
nop
nop
nop
sub
cmp
jb
sub
mov
mov
cmp
jnz
nop
nop
nop
nop
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
sub
mov
sub
rep
mov
jmp
jmp
db
dw
dd
db
db
dd
db
dd
db
db
dd
dw
dw
dd
dd
dd
dd
db
push
mov
sub
push
push
push
mov
cmp
jz
cmp
jnz
mov
pusha
lea
mov
cmp
jz
nop
nop
nop
nop
add
mov
inc
mov
inc
sub
mov
mov
push
mov
push
mov
mov
add
push
mov
push
VxDCall
add
add
mov
cmp
jnz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
mov
sub
lea
mov
mov
VxDCall
jb
mov
mov
mov
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
cmp
jnz
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
add
mov
mov
add
lea
mov
VxDCall
mov
mov
add
lea
mov
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
mul
mov
add
sub
add
add
mov
mov
lea
VxDCall
cmp
jz
mov
mov
add
mov
add
sub
mov
sub
mov
mov
div
inc
mul
push
add
mov
sub
mov
mov
div
inc
mul
push
add
mov
mov
add
mov
mov
mov
mov
add
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
mov
mov
mov
mov
mov
lea
mov
lodsd
add
mov
mov
loop
pop
mov
mov
add
sub
pop
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
VxDCall
popa
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
call
add
pop
pop
pop
leave
retn
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
db
dd
align
extrn
end
assume
assume
push
mov
sub
push
push
push
mov
push
mov
push
call
add
test
jz
push
call
add
mov
push
push
call
add
test
jz
push
call
add
mov
push
push
call
add
mov
test
jz
mov
sub
repne
not
sub
mov
shr
mov
mov
rep
mov
and
rep
mov
push
mov
mov
mov
mov
push
call
push
mov
push
call
mov
mov
mov
mov
lea
push
call
test
jz
push
push
push
push
push
call
mov
test
jz
push
push
push
push
call
push
lea
push
mov
push
push
call
test
jz
mov
mov
lea
push
push
call
test
jnz
lea
push
call
lea
push
call
push
lea
push
push
push
call
test
jnz
jmp
mov
push
call
jmp
mov
push
call
jmp
mov
push
call
xor
pop
pop
pop
mov
pop
retn
push
mov
sub
push
push
push
mov
push
push
call
mov
lea
push
push
call
mov
mov
lea
mov
cdq
sub
mov
sar
mov
lea
cdq
sub
sar
mov
lea
push
push
call
push
mov
push
add
push
push
mov
add
push
push
push
push
call
push
call
push
mov
push
add
push
push
mov
add
push
push
push
push
call
push
call
push
push
call
mov
mov
sub
lea
add
push
cdq
sub
push
sar
add
call
push
mov
push
sub
push
add
add
push
push
push
push
call
push
lea
push
push
call
lea
push
push
push
call
push
push
call
mov
push
push
mov
push
add
push
push
push
push
call
push
lea
push
push
call
lea
push
push
push
call
pop
pop
pop
mov
pop
retn
push
mov
mov
cmp
push
ja
jz
cmp
jz
jmp
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
push
push
push
push
call
jmp
mov
test
jz
push
call
mov
test
jz
push
call
call
push
call
jmp
mov
push
push
jmp
push
call
jmp
push
push
push
push
call
jmp
movzx
cmp
jnz
mov
push
push
jmp
push
mov
push
push
call
test
jz
push
call
push
call
jmp
push
mov
mov
push
push
push
call
test
jnz
push
push
call
call
push
mov
push
push
call
test
jz
mov
push
call
call
push
call
jmp
push
push
call
push
push
push
push
call
push
mov
call
push
call
jmp
cmp
jnz
push
mov
mov
push
push
call
push
test
jz
call
push
call
jmp
call
push
push
call
xor
pop
pop
retn
push
mov
push
mov
push
push
push
push
push
call
push
mov
push
push
push
push
push
call
push
mov
push
mov
push
push
push
push
call
push
mov
push
mov
push
push
push
push
call
push
mov
mov
mov
push
call
push
mov
push
call
pop
mov
retn
push
push
mov
mov
mov
test
jz
push
call
add
cmp
jb
mov
mov
mov
test
jz
push
call
add
cmp
jb
pop
pop
retn
push
mov
push
test
jz
push
call
push
mov
push
push
push
push
push
call
mov
test
jz
mov
push
push
mov
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
pop
pop
retn
push
mov
sub
push
lea
push
push
push
call
mov
test
jnz
lea
mov
push
push
push
call
cmp
sbb
mov
neg
or
jz
push
lea
push
push
call
push
lea
push
push
call
mov
pop
pop
pop
mov
pop
retn
push
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
test
jz
push
push
push
lea
push
call
add
jmp
push
lea
push
call
lea
push
push
call
mov
pop
retn
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
mov
mov
push
call
cmp
jz
mov
jmp
cmp
jz
push
lea
push
lea
push
mov
push
push
push
push
push
call
test
jz
mov
mov
mov
mov
mov
sub
cmp
sbb
inc
mov
mov
sub
mov
cmp
sbb
inc
mov
mov
mov
mov
mov
mov
cmp
sbb
neg
pop
mov
pop
retn
xor
mov
cmp
jz
mov
cmp
jz
inc
cmp
jz
push
mov
push
push
push
call
retn
sub
push
push
push
push
push
mov
push
call
mov
lea
push
push
call
push
call
mov
push
push
push
push
call
push
push
call
lea
mov
mov
push
push
call
push
push
push
call
push
push
call
push
push
call
cmp
jnz
mov
sub
mov
mov
mov
mov
mov
lea
mov
push
push
call
push
push
push
push
push
push
push
call
push
mov
push
call
push
push
call
pop
pop
pop
pop
add
retn
push
xor
mov
push
push
push
xor
mov
cmp
jz
mov
cmp
jz
mov
mov
cmp
jnz
test
jz
cmp
mov
jz
push
push
push
push
push
call
cmp
jnz
test
jz
cmp
mov
jz
push
push
push
push
push
call
cmp
jnz
test
jz
push
push
call
add
mov
push
push
push
call
push
mov
call
jmp
mov
cmp
jnz
test
jz
push
push
call
add
mov
push
push
push
call
push
call
pop
pop
pop
pop
retn
push
push
push
push
xor
cmp
jz
mov
mov
mov
cmp
jz
mov
mov
mov
call
mov
mov
jmp
mov
cmp
jb
mov
mov
test
jz
call
sub
mov
sub
mov
div
sub
div
mov
cmp
jnz
cmp
jnz
mov
mov
sub
mov
div
mov
mov
sub
mov
div
mov
xor
push
push
call
add
mov
test
jnz
test
jz
test
jz
test
jz
mov
cmp
jbe
cmp
sbb
and
add
jmp
cmp
sbb
and
add
jmp
mov
cmp
mov
jmp
mov
cmp
mov
adc
push
push
push
call
add
mov
push
push
push
call
add
mov
test
jz
push
mov
call
jmp
mov
test
jz
push
call
push
push
push
call
cmp
jz
mov
push
call
mov
pop
inc
pop
pop
pop
retn
push
lea
mov
sub
push
lea
push
mov
push
mov
push
call
lea
lea
push
lea
push
push
push
push
push
push
call
mov
mov
pop
retn
cmp
jz
push
push
call
mov
push
mov
push
push
push
call
retn
cmp
jnz
mov
mov
mov
jmp
mov
mov
push
push
push
push
call
retn
align
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
lea
push
call
add
push
push
call
add
mov
mov
mov
mov
cmp
jle
inc
mov
cmp
jg
cmp
jz
cmp
jg
inc
mov
cmp
jnz
push
push
push
push
call
push
call
mov
push
call
jmp
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
retn
mov
mov
mov
cmp
jz
cmp
jz
cmp
jz
cmp
jnz
push
call
add
mov
mov
push
call
add
push
call
add
push
call
add
mov
push
call
add
mov
mov
mov
pop
pop
pop
mov
pop
retn
align
mov
retn
align
align
align
jmp
align
assume
db
align
dd
db
align
dd
db
dw
db
db
db
db
db
db
db
db
align
dd
dd
align
align
align
align
dd
align
dd
dd
align
align
dd
db
dd
db
align
db
dd
db
align
dd
db
align
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
assume
assume
assume
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
retn
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
align
dd
public
mov
sub
mov
mov
mov
repne
mov
or
jz
cmp
jnb
nop
nop
nop
nop
repe
or
jz
nop
nop
nop
nop
sub
cmp
jb
sub
mov
mov
cmp
jnz
nop
nop
nop
nop
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
sub
mov
sub
rep
mov
jmp
jmp
dw
dd
dd
dd
dd
dd
push
mov
sub
push
push
push
mov
cmp
jz
cmp
jnz
mov
pusha
lea
mov
cmp
jz
nop
nop
nop
nop
add
mov
inc
mov
inc
sub
mov
mov
push
mov
push
mov
mov
add
push
mov
push
VxDCall
add
add
mov
cmp
jnz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
mov
sub
lea
mov
mov
VxDCall
jb
mov
mov
mov
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
cmp
jnz
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
add
mov
mov
add
lea
mov
VxDCall
mov
mov
add
lea
mov
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
mul
mov
add
sub
add
add
mov
mov
lea
VxDCall
cmp
jz
mov
mov
add
mov
add
sub
mov
sub
mov
mov
div
inc
mul
push
add
mov
sub
mov
mov
div
inc
mul
push
add
mov
mov
add
mov
mov
mov
mov
add
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
mov
mov
mov
mov
mov
lea
mov
lodsd
add
mov
mov
loop
pop
mov
mov
add
sub
pop
lea
call
mov
mov
add
mov
lea
VxDCall
mov
VxDCall
popa
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
call
add
pop
pop
pop
leave
retn
db
dd
dd
dd
dd
dd
dd
dd
dd
end
assume
assume
public
mov
jmp
push
call
jmp
align
dd
db
assume
db
mov
sub
mov
mov
mov
repne
mov
or
jz
cmp
jnb
nop
nop
nop
nop
repe
or
jz
nop
nop
nop
nop
sub
cmp
jb
sub
mov
mov
cmp
jnz
nop
nop
nop
nop
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
sub
mov
sub
rep
mov
jmp
jmp
db
dw
dd
db
db
dd
db
dd
db
db
dd
dw
dw
dd
dd
dd
dd
db
db
db
db
db
dd
db
dw
db
push
mov
sub
push
push
push
mov
cmp
jz
cmp
jnz
mov
pusha
lea
mov
cmp
jz
nop
nop
nop
nop
add
mov
inc
mov
inc
sub
mov
mov
push
mov
push
mov
mov
add
push
mov
push
VxDCall
add
add
mov
cmp
jnz
mov
sub
lea
mov
mov
VxDCall
jb
mov
mov
mov
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
cmp
jnz
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
add
mov
mov
add
lea
mov
VxDCall
mov
mov
add
lea
mov
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
mul
mov
add
sub
add
add
mov
mov
lea
VxDCall
cmp
jz
mov
mov
add
mov
add
sub
mov
sub
mov
mov
div
inc
mul
push
add
mov
sub
mov
mov
div
inc
mul
push
add
mov
mov
add
mov
mov
mov
mov
add
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lodsd
add
mov
mov
loop
pop
mov
mov
add
sub
pop
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
VxDCall
popa
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
call
add
pop
pop
pop
leave
retn
dd
dd
db
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
db
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
db
db
dd
db
align
dd
db
align
extrn
end
assume
assume
public
push
pushf
pusha
call
mov
sub
add
xor
call
mov
jmp
db
push
mov
push
sidt
pop
lea
xchg
ror
xchg
int
mov
rol
mov
xor
pop
pop
popa
popf
retn
retn
db
db
db
db
db
db
align
db
db
db
db
db
db
db
db
align
align
db
db
db
align
dw
db
align
dw
db
db
db
db
db
db
db
db
db
dw
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
align
dw
db
db
db
db
db
db
db
db
db
db
db
db
db
align
dw
db
db
db
db
align
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
align
dw
db
db
db
db
db
db
db
db
db
db
db
db
db
align
dw
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
align
dw
db
db
db
db
db
align
dw
db
db
db
db
db
db
db
db
db
db
db
db
dw
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
align
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
align
db
db
db
db
db
db
db
dw
db
db
db
db
db
db
db
align
dw
db
db
db
db
db
db
db
db
db
db
db
dw
db
align
db
db
db
dw
db
align
db
db
db
align
dw
db
db
db
dw
db
db
db
db
db
align
dw
db
db
db
db
db
db
db
align
dw
db
align
db
db
db
dw
db
align
db
db
db
db
db
align
db
db
db
dw
db
db
db
db
dw
db
align
db
db
db
dw
db
db
db
db
db
db
db
dw
db
db
db
align
dw
db
db
db
db
db
db
db
db
db
db
db
align
dw
db
align
db
db
db
db
db
db
db
db
db
db
db
align
dw
db
db
db
db
db
db
push
sal
xor
mov
popa
popf
jmp
xor
div
or
jz
nop
nop
nop
nop
inc
mul
retn
call
pop
sub
retn
db
dd
dd
dd
dd
end
assume
assume
push
mov
sub
push
push
push
mov
push
mov
push
call
add
test
jz
push
call
add
mov
push
push
call
add
test
jz
push
call
add
mov
push
push
call
add
mov
test
jz
mov
sub
repne
not
sub
mov
shr
mov
mov
rep
mov
and
rep
mov
push
mov
mov
mov
mov
push
call
push
mov
push
call
mov
mov
mov
mov
lea
push
call
test
jz
push
push
push
push
push
call
mov
test
jz
push
push
push
push
call
push
lea
push
mov
push
push
call
test
jz
mov
mov
lea
push
push
call
test
jnz
lea
push
call
lea
push
call
push
lea
push
push
push
call
test
jnz
jmp
mov
push
call
jmp
mov
push
call
jmp
mov
push
call
xor
pop
pop
pop
mov
pop
retn
push
mov
sub
push
push
push
mov
push
push
call
mov
lea
push
push
call
mov
mov
lea
mov
cdq
sub
mov
sar
mov
lea
cdq
sub
sar
mov
lea
push
push
call
push
mov
push
add
push
push
mov
add
push
push
push
push
call
push
call
push
mov
push
add
push
push
mov
add
push
push
push
push
call
push
call
push
push
call
mov
mov
sub
lea
add
push
cdq
sub
push
sar
add
call
push
mov
push
sub
push
add
add
push
push
push
push
call
push
lea
push
push
call
lea
push
push
push
call
push
push
call
mov
push
push
mov
push
add
push
push
push
push
call
push
lea
push
push
call
lea
push
push
push
call
pop
pop
pop
mov
pop
retn
push
mov
mov
cmp
push
ja
jz
cmp
jz
jmp
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
push
push
push
push
call
jmp
mov
test
jz
push
call
mov
test
jz
push
call
call
push
call
jmp
mov
push
push
jmp
push
call
jmp
push
push
push
push
call
jmp
movzx
cmp
jnz
mov
push
push
jmp
push
mov
push
push
call
test
jz
push
call
push
call
jmp
push
mov
mov
push
push
push
call
test
jnz
push
push
call
call
push
mov
push
push
call
test
jz
mov
push
call
call
push
call
jmp
push
push
call
push
push
push
push
call
push
mov
call
push
call
jmp
cmp
jnz
push
mov
mov
push
push
call
push
test
jz
call
push
call
jmp
call
push
push
call
xor
pop
pop
retn
push
mov
push
mov
push
push
push
push
push
call
push
mov
push
push
push
push
push
call
push
mov
push
mov
push
push
push
push
call
push
mov
push
mov
push
push
push
push
call
push
mov
mov
mov
push
call
push
mov
push
call
pop
mov
retn
push
push
mov
mov
mov
test
jz
push
call
add
cmp
jb
mov
mov
mov
test
jz
push
call
add
cmp
jb
pop
pop
retn
push
mov
push
test
jz
push
call
push
mov
push
push
push
push
push
call
mov
test
jz
mov
push
push
mov
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
pop
pop
retn
push
mov
sub
push
lea
push
push
push
call
mov
test
jnz
lea
mov
push
push
push
call
cmp
sbb
mov
neg
or
jz
push
lea
push
push
call
push
lea
push
push
call
mov
pop
pop
pop
mov
pop
retn
push
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
test
jz
push
push
push
lea
push
call
add
jmp
push
lea
push
call
lea
push
push
call
mov
pop
retn
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
mov
mov
push
call
cmp
jz
mov
jmp
cmp
jz
push
lea
push
lea
push
mov
push
push
push
push
push
call
test
jz
mov
mov
mov
mov
mov
sub
cmp
sbb
inc
mov
mov
sub
mov
cmp
sbb
inc
mov
mov
mov
mov
mov
mov
cmp
sbb
neg
pop
mov
pop
retn
xor
mov
cmp
jz
mov
cmp
jz
inc
cmp
jz
push
mov
push
push
push
call
retn
sub
push
push
push
push
push
mov
push
call
mov
lea
push
push
call
push
call
mov
push
push
push
push
call
push
push
call
lea
mov
mov
push
push
call
push
push
push
call
push
push
call
push
push
call
cmp
jnz
mov
sub
mov
mov
mov
mov
mov
lea
mov
push
push
call
push
push
push
push
push
push
push
call
push
mov
push
call
push
push
call
pop
pop
pop
pop
add
retn
push
xor
mov
push
push
push
xor
mov
cmp
jz
mov
cmp
jz
mov
mov
cmp
jnz
test
jz
cmp
mov
jz
push
push
push
push
push
call
cmp
jnz
test
jz
cmp
mov
jz
push
push
push
push
push
call
cmp
jnz
test
jz
push
push
call
add
mov
push
push
push
call
push
mov
call
jmp
mov
cmp
jnz
test
jz
push
push
call
add
mov
push
push
push
call
push
call
pop
pop
pop
pop
retn
push
push
push
push
xor
cmp
jz
mov
mov
mov
cmp
jz
mov
mov
mov
call
mov
mov
jmp
mov
cmp
jb
mov
mov
test
jz
call
sub
mov
sub
mov
div
sub
div
mov
cmp
jnz
cmp
jnz
mov
mov
sub
mov
div
mov
mov
sub
mov
div
mov
xor
push
push
call
add
mov
test
jnz
test
jz
test
jz
test
jz
mov
cmp
jbe
cmp
sbb
and
add
jmp
cmp
sbb
and
add
jmp
mov
cmp
mov
jmp
mov
cmp
mov
adc
push
push
push
call
add
mov
push
push
push
call
add
mov
test
jz
push
mov
call
jmp
mov
test
jz
push
call
push
push
push
call
cmp
jz
mov
push
call
mov
pop
inc
pop
pop
pop
retn
push
lea
mov
sub
push
lea
push
mov
push
mov
push
call
lea
lea
push
lea
push
push
push
push
push
push
call
mov
mov
pop
retn
cmp
jz
push
push
call
mov
push
mov
push
push
push
call
retn
cmp
jnz
mov
mov
mov
jmp
mov
mov
push
push
push
push
call
retn
align
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
lea
push
call
add
push
push
call
add
mov
mov
mov
mov
cmp
jle
inc
mov
cmp
jg
cmp
jz
cmp
jg
inc
mov
cmp
jnz
push
push
push
push
call
push
call
mov
push
call
jmp
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
retn
mov
mov
mov
cmp
jz
cmp
jz
cmp
jz
cmp
jnz
push
call
add
mov
mov
push
call
add
push
call
add
push
call
add
mov
push
call
add
mov
mov
mov
pop
pop
pop
mov
pop
retn
align
mov
retn
align
align
align
jmp
align
assume
db
align
dd
db
align
dd
db
dw
db
db
db
db
db
db
db
db
align
dd
dd
align
align
align
align
dd
align
dd
dd
align
align
dd
db
align
db
dd
db
align
dd
db
align
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
assume
assume
assume
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
retn
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
db
align
dd
public
mov
sub
mov
mov
mov
repne
mov
or
jz
cmp
jnb
nop
nop
nop
nop
repe
or
jz
nop
nop
nop
nop
sub
cmp
jb
sub
mov
mov
cmp
jnz
nop
nop
nop
nop
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
sub
mov
sub
rep
mov
jmp
jmp
dw
dd
dd
dd
dd
dd
push
mov
sub
push
push
push
mov
cmp
jz
cmp
jnz
mov
pusha
lea
mov
cmp
jz
nop
nop
nop
nop
add
mov
inc
mov
inc
sub
mov
mov
push
mov
push
mov
mov
add
push
mov
push
VxDCall
add
add
mov
cmp
jnz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
mov
sub
lea
mov
mov
VxDCall
jb
mov
mov
mov
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
cmp
jnz
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
add
mov
mov
add
lea
mov
VxDCall
mov
mov
add
lea
mov
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
mul
mov
add
sub
add
add
mov
mov
lea
VxDCall
cmp
jz
mov
mov
add
mov
add
sub
mov
sub
mov
mov
div
inc
mul
push
add
mov
sub
mov
mov
div
inc
mul
push
add
mov
mov
add
mov
mov
mov
mov
add
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
mov
mov
mov
mov
mov
lea
mov
lodsd
add
mov
mov
loop
pop
mov
mov
add
sub
pop
lea
call
mov
mov
add
mov
lea
VxDCall
mov
VxDCall
popa
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
call
add
pop
pop
pop
leave
retn
dw
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
db
db
db
db
db
db
db
db
db
align
dw
db
db
db
align
db
dd
dd
end
assume
assume
public
mov
jmp
push
call
jmp
align
dd
db
assume
db
mov
sub
mov
mov
mov
repne
mov
or
jz
cmp
jnb
nop
nop
nop
nop
repe
or
jz
nop
nop
nop
nop
sub
cmp
jb
sub
mov
mov
cmp
jnz
nop
nop
nop
nop
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
sub
mov
sub
rep
mov
jmp
jmp
db
dw
dd
db
db
dd
db
dd
db
db
dd
dw
dw
dd
dd
dd
dd
db
push
mov
sub
push
push
push
mov
cmp
jz
cmp
jnz
mov
pusha
lea
mov
cmp
jz
nop
nop
nop
nop
add
mov
inc
mov
inc
sub
mov
mov
push
mov
push
mov
mov
add
push
mov
push
VxDCall
add
add
mov
cmp
jnz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
mov
sub
lea
mov
mov
VxDCall
jb
mov
mov
mov
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
cmp
jnz
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
add
mov
mov
add
lea
mov
VxDCall
mov
mov
add
lea
mov
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
mul
mov
add
sub
add
add
mov
mov
lea
VxDCall
cmp
jz
mov
mov
add
mov
add
sub
mov
sub
mov
mov
div
inc
mul
push
add
mov
sub
mov
mov
div
inc
mul
push
add
mov
mov
add
mov
mov
mov
mov
add
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
mov
mov
mov
mov
mov
lea
mov
lodsd
add
mov
mov
loop
pop
mov
mov
add
sub
pop
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
VxDCall
popa
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
call
add
pop
pop
pop
leave
retn
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
db
align
dd
db
align
extrn
end
include
assume
assume
dd
align
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
align
db
dd
db
dd
jmp
db
dd
dd
align
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
db
db
dd
db
db
dw
dd
db
db
dd
db
dw
dd
dw
dd
db
db
db
db
dd
dw
dd
dd
db
db
dd
db
db
dd
db
dd
db
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
align
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
db
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
jo
push
retn
dd
dd
dd
dd
dd
db
mov
db
mov
db
retn
dw
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
align
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
mov
mov
retf
db
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
xor
fxch4
mov
mov
retf
db
dd
dd
dd
dd
dd
dd
dd
dd
xchg
test
retn
db
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
align
dd
dd
dd
dd
dd
dd
dd
dd
pop
dec
leave
lodsd
xchg
leave
scasb
xchg
retf
dw
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
push
inc
cmp
mov
scasd
xchg
sar
retf
db
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
or
or
xchg
retf
align
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
align
dd
db
align
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
retn
db
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
align
align
dd
dd
dd
dd
align
align
dd
dd
dd
dd
dd
align
dd
dd
dd
dd
dd
align
dd
align
dd
dd
dd
dd
dd
dd
dd
dd
unicode
dd
dd
dd
dd
align
dd
dd
dd
dd
align
dd
dd
dd
dd
align
dd
dd
dd
align
dd
dd
dd
dd
dd
dd
align
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
sub
jmp
align
dd
dd
dd
dd
dd
dd
dd
align
dd
dd
dd
dd
dd
dd
dd
dd
align
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
push
mov
sub
push
mov
push
mov
push
push
mov
and
and
mov
push
mov
mov
push
push
mov
mov
push
call
call
and
mov
push
mov
call
mov
mov
pop
pop
mov
pop
leave
retn
align
dd
assume
dd
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
extrn
assume
assume
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
db
public
mov
sub
mov
mov
mov
repne
mov
or
jz
cmp
jnb
nop
nop
nop
nop
repe
or
jz
nop
nop
nop
nop
sub
cmp
jb
sub
mov
mov
cmp
jnz
nop
nop
nop
nop
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
sub
mov
sub
rep
mov
jmp
jmp
dd
dd
dd
dd
dd
dd
dd
add
push
mov
sub
push
push
push
mov
cmp
jz
cmp
jnz
mov
pusha
lea
mov
cmp
jz
nop
nop
nop
nop
add
mov
inc
mov
inc
sub
mov
mov
push
mov
push
mov
mov
add
push
mov
push
VxDCall
add
add
mov
cmp
jnz
mov
sub
lea
mov
mov
VxDCall
jb
mov
mov
mov
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
cmp
jnz
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
add
mov
mov
add
lea
mov
VxDCall
mov
mov
add
lea
mov
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
mul
mov
add
sub
add
add
mov
mov
lea
VxDCall
cmp
jz
mov
mov
add
mov
add
sub
mov
sub
mov
mov
div
inc
mul
push
add
mov
sub
mov
mov
div
inc
mul
push
add
mov
mov
add
mov
mov
mov
mov
add
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lodsd
add
mov
mov
loop
pop
mov
mov
add
sub
pop
lea
call
mov
mov
add
mov
lea
VxDCall
mov
VxDCall
popa
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
call
add
pop
pop
pop
leave
retn
dd
dd
dd
dd
dd
dd
dd
dd
dd
dd
db
dw
dd
end
assume
assume
push
mov
sub
push
call
mov
mov
cmp
jnz
inc
mov
test
jz
cmp
jnz
cmp
jnz
inc
jmp
cmp
jle
inc
cmp
jg
cmp
jz
cmp
jg
inc
cmp
jnz
mov
lea
push
call
test
mov
jz
movzx
push
push
push
push
call
push
call
db
db
db
db
db
push
push
push
push
push
push
call
push
call
xor
retn
align
dd
extrn
extrn
extrn
extrn
extrn
assume
assume
dd
public
mov
sub
mov
mov
mov
repne
mov
or
jz
cmp
jnb
nop
nop
nop
nop
repe
or
jz
nop
nop
nop
nop
sub
cmp
jb
sub
mov
mov
cmp
jnz
nop
nop
nop
nop
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
sub
mov
sub
rep
mov
jmp
jmp
dw
retn
align
dw
dd
dd
dd
dd
dd
push
mov
sub
push
push
push
mov
cmp
jz
cmp
jnz
mov
pusha
lea
mov
cmp
jz
nop
nop
nop
nop
add
mov
inc
mov
inc
sub
mov
mov
push
mov
push
mov
mov
add
push
mov
push
VxDCall
add
add
mov
cmp
jnz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
mov
sub
lea
mov
mov
VxDCall
jb
mov
mov
mov
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
cmp
jnz
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
add
mov
mov
add
lea
mov
VxDCall
mov
mov
add
lea
mov
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
add
mov
lea
VxDCall
mov
mov
mul
mov
add
sub
add
add
mov
mov
lea
VxDCall
cmp
jz
mov
mov
add
mov
add
sub
mov
sub
mov
mov
div
inc
mul
push
add
mov
sub
mov
mov
div
inc
mul
push
add
mov
mov
add
mov
mov
mov
mov
add
mov
lea
VxDCall
mov
mov
mov
lea
VxDCall
mov
mov
mov
mov
mov
lea
mov
lodsd
add
mov
mov
loop
pop
mov
mov
add
sub
pop
lea
call
mov
mov
add
mov
lea
VxDCall
mov
VxDCall
popa
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
call
add
pop
pop
pop
leave
retn
db
dd
dd
dd
dd
dd
dd
dd
dd
db
db
db
align
dw
db
db
db
dd
dd
end
